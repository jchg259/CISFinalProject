import numpy as np

from matrices import matrices_reader

from galignment import nw_algoirthm

from PAM import PAM_Score_List, PAM_Score_Graph

import time

start = time.time()



'''
sequence1 = "GAVLIMXCST"
sequence2 = "GAV-YZXC--"



matrix = np.loadtxt("MatricesTest/Test20.txt", dtype=str)
#print(matrix)

n = len(sequence1)
m = len(sequence2)

pamscore = 0
row = 0
col = 0

for i in range(0,max(n,m)):
	a=0
	b=0
	
	for j in range(0,23):
		if sequence1[i] != matrix[0][a]:
			a = a+1
		else:
			col = a
			#print(col)
			break
		    
	for k in range(0,23):
		if sequence2[i] != matrix[0][b]:
			b = b+1
		else:
			row = b+1
			#print(row)
			break
		    
	pamscore = pamscore + float(matrix[row][col])

print(pamscore)
'''

letters, matrixlist = matrices_reader()
#matrixitem = matrixlist[1]
#print(letters)
#print(matrixitem)



#sequence_1 = "gavlimxcst"
#sequence_2 = "gavyzxc"

sequence_1, sequence_2, GA_Score = nw_algoirthm("MEETMKLATMEDTVEYCLFLIPDESRDSDKHKEILQKYIERIITRFAPMLVPYIWQNQPFNLKYKPGKGGVPAHMFGVTKFGDNIEDEWFIVYVIKQITKEFPELVARIEDNDGEFLLIEAADFLPKWLDPENSTNRVFFCHGELCIIPAPRKSGAESWLPTTPPTIPQALNIITAHSEKILASESIRAAVNRRIRGYPEKIQASLHRAHCFLPAGIVAVLKQRPRLVAAAVQAFYLRDPIDLRACRVFKTFLPETRIMTSVTFTKCLYAQLVQQRFVPDRRSGYRLPPPSDPQYRAHELGMKLAHGFEILCSKCSPHFSDCKKSLVTASPLWASFLESLKKNDYFKGLIEGSAQYRERLEMAENYFQLSVDWPESSLAMSPGEEILTLLQTIPFDIEDLKKEAANLPPEDDDQWLDLSPDQLDQLLQEAVGKKESESVSKEEKEQNYDLTEVSESMKAFISKVSTHKGAELPREPSEAPITFDADSFLNYFDKILGPRPNESDSDDLDDEDFECLDSDDDLDFETHEPGEEASLKGTLDNLKSYMAQMDQELAHTCISKSFTTRNQVEPVSQTTDNNSDEEDSGTGESVMAPVDVDLNLVSNILESYSSQAGLAGPASNLLQSMGVQLPDNTDHRPTSKPTKN","MTAKRVDMAAPDNLLFLDSDAVNSSPASVPIEQNEPTHVLDNQTDDSLRSMPDPHTNTALESTGLMPVPCQDETLETHSQHNEGENESSLVSTQHMDHTRLTEMTINDEKSNNWDFDISGVKENDNSTNLNPDLIHHAGTDSVMERNLNDKQTDLNHKDETFGSLMSSEVLLLKENRQQEMSQDTNLHQCSSSESTGIEYSQTANDAISDAMNSEQSPDQPFSIASNDTDKTTSECSVQTCWDTVESAATSKTQPELHDDVKDVMCESFTTSQTLNIDYLSTDISVCLADLPETDSLNILTPASTLLGILGKNNNVLKTADVPINDSEMVQSINKDLASPNADISKTVFTQMDQNLLHVTDHNVKVLESNRADTVVDQYVFSENIGQEVSQASSHDEDLNSSVQSHDQQLSTANSEIEETSSEFHTQTCQDIHEGVIIAEEAMNGHNTLPEMHDIADVTTSQTPIMKDPMIDEPSYLPDLHKADTPNVITTASTLSDTLETDDSIFETADVSVSDCELIQTVTLKTVTTYETLLMMHDVGEDLTCCDFTTSAIEEPETSHPLSLDDLHESNTPNIPPHASALLDSLGMNKNFLETADVPVSDCEVIQTVTFETVTTYETFPVMHDIAEDLTCCDFTTSETPKIEEPETSHSLSLDDLNEANTPNILPHASALLESLGMNNNFLEAADMPVSDREIIHPVNKDLDSSSVEICTVVLTQTDPKEVQDSDLDEKETESNRIDDSIDGMIDTKFSLDVSKLQPVCSNDLSGTVIHSESLFSQSIPDTPQIGEKYKNDLLQVISPPTPVTNEDLGNCSEEIDDACLKFTGTERDVEGDSELWLEPSQFLAGEEDEGAIFDKWGRSCSSSPPTTHPDNTKASDYTWRENISIDHNAEDWELTFPPVERWSSSDSWASALSDWFQAVNTYPEDSFKSASTGSKLGMAIQDNILEQRTSSDNANNDEQTCLSLNLMQPDEPGQALERGLVKSDNTNGTVFKQGDKERLASCLDMDKDTTTMESQMSLLETSTPESHKADNNAVMETFNASLTHEFNAKLHGSLDISGKLLSAKREGNVLVEVTGGKVSQLGLVFEEERQSIFTSPSSSAYTRDKNLTGCVSNEERCHSSDVHLCICPSQSDSHVSSKAGHAEGNGSFLHSNIGNCTVKPYVEENIPQFIMPFAPICTGNTFLHRSFLKEDRSQADLDLPDKKIINKINLKSNKKSSSSDDSSEDNFHTCPDQSLSSSSGDSDDPSITDSGRKPAYSDTCDIGKELSKLLLLTGEHFMVSEDKRIAYVTLDLDESQHFGRFSLPNCEKQSKPDNMPHKTSKTSSDGKMRSKHKEKPDDKQQHGIQASKKQDPQPQSQVKNEGAGCEDCPVAVIETIVITEKIIPKTQGKKKKKHVQHGTPKPENDAPTDVRSESRQKNVNGKAENLELKVASNSLNKPVAQPSGKTDITKKDSAQKVMSVRPKVEPSMAKMDPAGVNATQKSSPIKLKADTFNTAKMENKTCTTDSLSTCLPSMLNDDIKRRRIADDLSRAVPIRTRPQLPAIFRQARKDGEDVTRRAYSEVVKQKNSTPKEVVVPRVVSEIQADPVPADPQNISLWCQFSPIPPEATIKWTKEAAVLSEINKVEKEDGRFTLTIIKACSKDLGFYKCSLIVANISVSTSEYHLTSEVLMELVIPSHDQPAEPRVMEGDEENIQCSPLLFKEDFLSDQYFGKNQPASILTEKVHFGEGMHRKAFRTTLTEGNLPRFRPGHPCVLKVHNSISYGTKNNEELVQKNYSLAVEECHVQNTAREYIKAYNSVAKSAESFGDLPEIIPIYLVHRPSNDIPYATLEEELLGDFVKYSVKDGKEINLMRRDSEAGQKCCAFQHWVYTQTEGNLLVTDMQGVGMKLTDVGIATCKKGYKGFRGNCATSFIDQFKALHQCNRYCELLGLVSLQPKPKRTVAPPKPKTQPVPKKKTFGPVLNAKS",letters, matrixlist[24])
print(sequence_1)
print(sequence_2)
print(GA_Score)
end = time.time()
print(end-start)

max, PAM, list = PAM_Score_List("MEETMKLATMEDTVEYCLFLIPDESRDSDKHKEILQKYIERIITRFAPMLVPYIWQNQPFNLKYKPGKGGVPAHMFGVTKFGDNIEDEWFIVYVIKQITKEFPELVARIEDNDGEFLLIEAADFLPKWLDPENSTNRVFFCHGELCIIPAPRKSGAESWLPTTPPTIPQALNIITAHSEKILASESIRAAVNRRIRGYPEKIQASLHRAHCFLPAGIVAVLKQRPRLVAAAVQAFYLRDPIDLRACRVFKTFLPETRIMTSVTFTKCLYAQLVQQRFVPDRRSGYRLPPPSDPQYRAHELGMKLAHGFEILCSKCSPHFSDCKKSLVTASPLWASFLESLKKNDYFKGLIEGSAQYRERLEMAENYFQLSVDWPESSLAMSPGEEILTLLQTIPFDIEDLKKEAANLPPEDDDQWLDLSPDQLDQLLQEAVGKKESESVSKEEKEQNYDLTEVSESMKAFISKVSTHKGAELPREPSEAPITFDADSFLNYFDKILGPRPNESDSDDLDDEDFECLDSDDDLDFETHEPGEEASLKGTLDNLKSYMAQMDQELAHTCISKSFTTRNQVEPVSQTTDNNSDEEDSGTGESVMAPVDVDLNLVSNILESYSSQAGLAGPASNLLQSMGVQLPDNTDHRPTSKPTKN","MTAKRVDMAAPDNLLFLDSDAVNSSPASVPIEQNEPTHVLDNQTDDSLRSMPDPHTNTALESTGLMPVPCQDETLETHSQHNEGENESSLVSTQHMDHTRLTEMTINDEKSNNWDFDISGVKENDNSTNLNPDLIHHAGTDSVMERNLNDKQTDLNHKDETFGSLMSSEVLLLKENRQQEMSQDTNLHQCSSSESTGIEYSQTANDAISDAMNSEQSPDQPFSIASNDTDKTTSECSVQTCWDTVESAATSKTQPELHDDVKDVMCESFTTSQTLNIDYLSTDISVCLADLPETDSLNILTPASTLLGILGKNNNVLKTADVPINDSEMVQSINKDLASPNADISKTVFTQMDQNLLHVTDHNVKVLESNRADTVVDQYVFSENIGQEVSQASSHDEDLNSSVQSHDQQLSTANSEIEETSSEFHTQTCQDIHEGVIIAEEAMNGHNTLPEMHDIADVTTSQTPIMKDPMIDEPSYLPDLHKADTPNVITTASTLSDTLETDDSIFETADVSVSDCELIQTVTLKTVTTYETLLMMHDVGEDLTCCDFTTSAIEEPETSHPLSLDDLHESNTPNIPPHASALLDSLGMNKNFLETADVPVSDCEVIQTVTFETVTTYETFPVMHDIAEDLTCCDFTTSETPKIEEPETSHSLSLDDLNEANTPNILPHASALLESLGMNNNFLEAADMPVSDREIIHPVNKDLDSSSVEICTVVLTQTDPKEVQDSDLDEKETESNRIDDSIDGMIDTKFSLDVSKLQPVCSNDLSGTVIHSESLFSQSIPDTPQIGEKYKNDLLQVISPPTPVTNEDLGNCSEEIDDACLKFTGTERDVEGDSELWLEPSQFLAGEEDEGAIFDKWGRSCSSSPPTTHPDNTKASDYTWRENISIDHNAEDWELTFPPVERWSSSDSWASALSDWFQAVNTYPEDSFKSASTGSKLGMAIQDNILEQRTSSDNANNDEQTCLSLNLMQPDEPGQALERGLVKSDNTNGTVFKQGDKERLASCLDMDKDTTTMESQMSLLETSTPESHKADNNAVMETFNASLTHEFNAKLHGSLDISGKLLSAKREGNVLVEVTGGKVSQLGLVFEEERQSIFTSPSSSAYTRDKNLTGCVSNEERCHSSDVHLCICPSQSDSHVSSKAGHAEGNGSFLHSNIGNCTVKPYVEENIPQFIMPFAPICTGNTFLHRSFLKEDRSQADLDLPDKKIINKINLKSNKKSSSSDDSSEDNFHTCPDQSLSSSSGDSDDPSITDSGRKPAYSDTCDIGKELSKLLLLTGEHFMVSEDKRIAYVTLDLDESQHFGRFSLPNCEKQSKPDNMPHKTSKTSSDGKMRSKHKEKPDDKQQHGIQASKKQDPQPQSQVKNEGAGCEDCPVAVIETIVITEKIIPKTQGKKKKKHVQHGTPKPENDAPTDVRSESRQKNVNGKAENLELKVASNSLNKPVAQPSGKTDITKKDSAQKVMSVRPKVEPSMAKMDPAGVNATQKSSPIKLKADTFNTAKMENKTCTTDSLSTCLPSMLNDDIKRRRIADDLSRAVPIRTRPQLPAIFRQARKDGEDVTRRAYSEVVKQKNSTPKEVVVPRVVSEIQADPVPADPQNISLWCQFSPIPPEATIKWTKEAAVLSEINKVEKEDGRFTLTIIKACSKDLGFYKCSLIVANISVSTSEYHLTSEVLMELVIPSHDQPAEPRVMEGDEENIQCSPLLFKEDFLSDQYFGKNQPASILTEKVHFGEGMHRKAFRTTLTEGNLPRFRPGHPCVLKVHNSISYGTKNNEELVQKNYSLAVEECHVQNTAREYIKAYNSVAKSAESFGDLPEIIPIYLVHRPSNDIPYATLEEELLGDFVKYSVKDGKEINLMRRDSEAGQKCCAFQHWVYTQTEGNLLVTDMQGVGMKLTDVGIATCKKGYKGFRGNCATSFIDQFKALHQCNRYCELLGLVSLQPKPKRTVAPPKPKTQPVPKKKTFGPVLNAKS")
#max, PAM, list = PAM_Score_List("GAVLIMXCST", "GAVYZXC")
#sequence_1, sequence_2, GA_Score = nw_algoirthm("GAVLIMXCST", "GAVYZXC",letters, matrixlist[18])
#print(sequence_1)
#print(sequence_2)
#print(GA_Score)
print(max)
print(list)
print(PAM)

end = time.time()
print(end - start)
PAM_Score_Graph(list)

